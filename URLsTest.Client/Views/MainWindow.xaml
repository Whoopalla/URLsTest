<Window x:Class="URLsTest.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:URLsTest.Client.ViewModels" 
        xmlns:local1="clr-namespace:URLsTest.Client.Utils" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:controls="clr-namespace:URLsTest.Client.Controls"
        mc:Ignorable="d"
        Title="TagsCounting" Height="1080" Width="1680" Icon="../Resources/icon.ico"
        DataContext="{local1:DISource Type=local:URLAnchorsViewModel}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        WindowState="Maximized">

    <Window.Resources>
        <BooleanToVisibilityConverter  x:Key="BoolToVis" />
    </Window.Resources>
    <materialDesign:DialogHost IsOpen="{Binding ShowDialog}">
        <materialDesign:DialogHost.DialogContent>
            <controls:OkDialog Style="{StaticResource OkDialogStyle}" Header="Message Box" Message="{Binding Message}"/>
        </materialDesign:DialogHost.DialogContent>
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                            <Setter Property="Cursor" Value="Wait"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="41*"/>
                <RowDefinition Height="491*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" Content="{Binding SelectedFile}" ></Label>
            <ComboBox MaxWidth="250" Grid.Column="2" Text="Html Tags To Search" IsEditable="true" IsReadOnly="true" ItemsSource="{Binding HtmlTags}"
                      SelectedItem="{Binding TagToSearch, Mode=TwoWay}"/>
            <Button Style="{DynamicResource MaterialDesignRaisedDarkButton}" Grid.Row="0" Grid.Column="1" Command="{Binding GetURLsFromFileCommand}" >Get URLs From File</Button>
            <Button Style="{DynamicResource MaterialDesignRaisedAccentButton}" Grid.Row="0" Grid.Column="3"  Command="{Binding CountTagsCommand}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Count"></Label>
                    <ProgressBar Grid.Column="1" Visibility="{Binding Path=IsBusy, Converter={StaticResource BoolToVis}}" 
                                             Style="{DynamicResource MaterialDesignCircularProgressBar}" Value="75" RenderTransformOrigin=".5, .5">

                        <ProgressBar.RenderTransform>
                            <!-- giving the transform a name tells the framework not to freeze it -->
                            <RotateTransform x:Name="noFreeze" />
                        </ProgressBar.RenderTransform>
                        <ProgressBar.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
            Storyboard.TargetProperty="(ProgressBar.RenderTransform).(RotateTransform.Angle)"
            To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ProgressBar.Triggers>
                    </ProgressBar>
                </Grid>
            </Button>
            <Button Style="{DynamicResource MaterialDesignRaisedAccentButton}" Grid.Row="0" Grid.Column="4"  
                    Command="{Binding CancelCountingCommand}">Cancel Counting</Button>
            <ListView ItemsSource="{Binding TagItems}" Grid.ColumnSpan="5" Grid.Column="0" Grid.Row="1">
                <ListView.View>
                    <GridView AllowsColumnReorder="true">
                        <GridViewColumn Width="400" DisplayMemberBinding="{Binding Path=Url}">URL</GridViewColumn>
                        <GridViewColumn Width="400" DisplayMemberBinding="{Binding Path=Count}">Count</GridViewColumn>
                        <GridViewColumn Width="400" Header="Error">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon Kind="Error" Foreground="Red"
                                                         Visibility="{Binding Path=ErrorOcurred, Converter={StaticResource BoolToVis}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Progress">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ProgressBar Visibility="{Binding Path=IsCalculating, Converter={StaticResource BoolToVis}}" 
                                             Style="{DynamicResource MaterialDesignCircularProgressBar}" Value="75" RenderTransformOrigin=".5, .5">

                                        <ProgressBar.RenderTransform>
                                            <!-- giving the transform a name tells the framework not to freeze it -->
                                            <RotateTransform x:Name="noFreeze" />
                                        </ProgressBar.RenderTransform>
                                        <ProgressBar.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
            Storyboard.TargetProperty="(ProgressBar.RenderTransform).(RotateTransform.Angle)"
            To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ProgressBar.Triggers>
                                    </ProgressBar>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>

                </ListView.View>
            </ListView>
        </Grid>
    </materialDesign:DialogHost>
    
</Window>
